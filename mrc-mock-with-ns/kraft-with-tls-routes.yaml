# export TUTORIAL_HOME="https://raw.githubusercontent.com/confluentinc/confluent-kubernetes-examples/master/quickstart-deploy/kraft-quickstart"

apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller-east
  namespace: confluent-east
  annotations:
    platform.confluent.io/broker-id-offset: "9990"
spec:
  dataVolumeCapacity: 10Gi
  image:
    application: confluentinc/cp-server:7.9.1
    init: confluentinc/confluent-init-container:2.11.1
  listeners:
    controller:
      tls:
        enabled: true
      externalAccess:
        type: route
        route:
          domain: apps-crc.testing
          brokerPrefix: keast
          bootstrapPrefix: krafteast-bootstrap
  tls:
    autoGeneratedCerts: true
  podTemplate:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
    podSecurityContext: {}
  replicas: 2
  clusterID: e896f38b-0e40-43be-989
  controllerQuorumVoters:
    - brokerEndpoint: keast0.apps-crc.testing:443
      nodeId: 9990
    - brokerEndpoint: keast1.apps-crc.testing:443
      nodeId: 9991
    - brokerEndpoint: kwest0.apps-crc.testing:443
      nodeId: 10000
---
apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller-west
  namespace: confluent-west
  annotations:
    platform.confluent.io/broker-id-offset: "10000"
spec:
  dataVolumeCapacity: 10Gi
  image:
    application: confluentinc/cp-server:7.9.1
    init: confluentinc/confluent-init-container:2.11.1
  listeners:
    controller:
      tls:
        enabled: true
      externalAccess:
        type: route
        route:
          domain: apps-crc.testing
          brokerPrefix: kwest
          bootstrapPrefix: kraftwest-bootstrap
  tls:
    autoGeneratedCerts: true
  podTemplate:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
    podSecurityContext: {}
  replicas: 1
  clusterID: e896f38b-0e40-43be-989
  controllerQuorumVoters:
    - brokerEndpoint: keast0.apps-crc.testing:443
      nodeId: 9990
    - brokerEndpoint: keast1.apps-crc.testing:443
      nodeId: 9991
    - brokerEndpoint: kwest0.apps-crc.testing:443
      nodeId: 10000
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka-east
  namespace: confluent-east
  annotations:
    platform.confluent.io/broker-id-offset: "100"
spec:
  replicas: 2
  image:
    application: confluentinc/cp-server:7.9.1
    init: confluentinc/confluent-init-container:2.11.1
  dataVolumeCapacity: 20Gi
  configOverrides:
    server:
      - replica.selector.class=org.apache.kafka.common.replica.RackAwareReplicaSelector
      - broker.rack=east
    #  - 'confluent.log.placement.constraints={"version":2,"replicas":[{"count":3,"constraints":{"rack":"west"}}],"observers":[{"count":1,"constraints":{"rack":"east"}}],"observerPromotionPolicy":"under-min-isr"}'
    #  - 'confluent.offsets.topic.placement.constraints={"version":2,"replicas":[{"count":3,"constraints":{"rack":"west"}}],"observers":[{"count":1,"constraints":{"rack":"east"}}],"observerPromotionPolicy":"under-min-isr"}'
    #  - 'confluent.transaction.state.log.placement.constraints={"version":2,"replicas":[{"count":3,"constraints":{"rack":"west"}}],"observers":[{"count":1,"constraints":{"rack":"east"}}],"observerPromotionPolicy":"under-min-isr"}'
  listeners:
      external:
        externalAccess:
          type: route
          route:
            domain: apps-crc.testing
            brokerPrefix: beast
            bootstrapPrefix: beast-bootstrap
        tls:
          enabled: true
  podTemplate:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
    podSecurityContext: {}
  metricReporter:
    enabled: true
  dependencies:
    kRaftController:
      clusterRef:
        name: kraftcontroller-east
      controllerListener:
        tls:
          enabled: true
  tls:
    autoGeneratedCerts: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka-west
  namespace: confluent-west
  annotations:
    platform.confluent.io/broker-id-offset: "200"
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:7.9.1
    init: confluentinc/confluent-init-container:2.11.1
  dataVolumeCapacity: 20Gi
  configOverrides:
    server:
      - replica.selector.class=org.apache.kafka.common.replica.RackAwareReplicaSelector
      - broker.rack=west
     # - 'confluent.log.placement.constraints={"version":2,"replicas":[{"count":3,"constraints":{"rack":"west"}}],"observers":[{"count":1,"constraints":{"rack":"east"}}],"observerPromotionPolicy":"under-min-isr"}'
     # - 'confluent.offsets.topic.placement.constraints={"version":2,"replicas":[{"count":3,"constraints":{"rack":"west"}}],"observers":[{"count":1,"constraints":{"rack":"east"}}],"observerPromotionPolicy":"under-min-isr"}'
     # - 'confluent.transaction.state.log.placement.constraints={"version":2,"replicas":[{"count":3,"constraints":{"rack":"west"}}],"observers":[{"count":1,"constraints":{"rack":"east"}}],"observerPromotionPolicy":"under-min-isr"}'
  listeners:
      external:
        externalAccess:
          type: route
          route:
            domain: apps-crc.testing
            brokerPrefix: bwest
            bootstrapPrefix: bwest-bootstrap
        tls:
          enabled: true
  podTemplate:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
    podSecurityContext: {}
  metricReporter:
    enabled: true
  dependencies:
    kRaftController:
      clusterRef:
        name: kraftcontroller-west
      controllerListener:
        tls:
          enabled: true
  tls:
    autoGeneratedCerts: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent-c3
spec:
  # configOverrides:
  #   server:
  #     - confluent.controlcenter.command.topic.replication=-1
  #     - confluent.controlcenter.replication.factor=-1
  #     - confluent.metrics.reporter.topic.replicas=-1
  #     - confluent.metrics.topic.replication=-1
  #     - confluent.monitoring.interceptor.topic.replication=-1
  #     - confluent.controlcenter.internal.topics.replication=-1
  replicas: 1
  podTemplate:
    probe:
      liveness:
        initialDelaySeconds: 500 
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500
      readiness:
        initialDelaySeconds: 500 
        timeoutSeconds: 100
    podSecurityContext: {}  
  image:
    application: confluentinc/cp-enterprise-control-center:7.9.1
    init: confluentinc/confluent-init-container:2.11.1
  dataVolumeCapacity: 20Gi
  dependencies:
    kafka:
      bootstrapEndpoint: bwest-bootstrap.apps-crc.testing:443
      tls:
        enabled: true
  externalAccess:
    type: route
    route:
      domain: apps-crc.testing
      prefix: controlcenter
  tls:
    autoGeneratedCerts: true