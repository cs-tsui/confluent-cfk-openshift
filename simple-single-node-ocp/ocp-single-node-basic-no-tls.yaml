# After CC is up, service will be generated by 
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: cc
  namespace: confluent
spec:
  host: cc-confluent.apps-crc.testing
  to:
    kind: Service
    name: controlcenter
    weight: 100
  port:
    targetPort: external
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: None
  wildcardPolicy: None
---
apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-zookeeper:7.5.3
    init: confluentinc/confluent-init-container:2.7.3
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
  podTemplate:
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
    podSecurityContext: {}
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server:7.5.3
    init: confluentinc/confluent-init-container:2.7.3
  dataVolumeCapacity: 10Gi
  configOverrides:
    server:
      - "confluent.license.topic.replication.factor=1"
      - "confluent.metrics.reporter.topic.replicas=1"
      - "confluent.tier.metadata.replication.factor=1"
      - "confluent.metadata.topic.replication.factor=1"
      - "confluent.balancer.topic.replication.factor=1"
      - "confluent.security.event.logger.exporter.kafka.topic.replicas=1"
      - "event.logger.exporter.kafka.topic.replicas=1"
      - "offsets.topic.replication.factor=1"
      - "confluent.cluster.link.enable=true"
      - "password.encoder.secret=secret"
  podTemplate:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
    podSecurityContext: {}
  metricReporter:
    enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-enterprise-control-center:7.5.3
    init: confluentinc/confluent-init-container:2.7.3
  dataVolumeCapacity: 10Gi
  configOverrides:
    server:
      - confluent.controlcenter.command.topic.replication=1
      - confluent.controlcenter.replication.factor=1
      - confluent.metrics.reporter.topic.replicas=1
      - confluent.metrics.topic.replication=1
      - confluent.monitoring.interceptor.topic.replication=1
      - confluent.controlcenter.internal.topics.replication=1
  # externalAccess:
  #   type: route
  #   route:
  #     domain: apps-crc.testing
  podTemplate:
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
    probe:
      liveness:
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500
    podSecurityContext: {}
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
    ksqldb:
    - name: ksql-dev
      url: http://ksqldb.confluent.svc.cluster.local:8088
    connect:
    - name: connect-dev
      url:  http://connect.confluent.svc.cluster.local:8083

---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  configOverrides:
    server:
    - confluent.topic.replication.factor=1
    - config.storage.replication.factor=1
    - offset.storage.replication.factor=1
    - status.storage.replication.factor=1
    - confluent.metadata.enable.server.urls.refresh=false
  replicas: 1
  build:
    type: onDemand
    onDemand:
      plugins:
        locationType: confluentHub
        confluentHub:
          - name: kafka-connect-datagen
            owner: confluentinc
            version: 0.6.4
          - name: debezium-connector-mysql
            owner: debezium
            version: 2.2.1
          - name: kafka-connect-jdbc
            owner: confluentinc
            version: 10.7.5
          - name: kafka-connect-transform-record2jsonstring
            owner: an0r0c
            version: "1.4"
  image:
    application: confluentinc/cp-server-connect:7.5.3
    init: confluentinc/confluent-init-container:2.7.3
  podTemplate:
    resources:
      requests:
        cpu: 200m
        memory: 256Mi
    podSecurityContext: {}
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: default
  namespace: confluent
spec:
  kafkaClusterRef:
    name: kafka